diff -ruN gcc_bc_orig/configure gcc_bc_new/configure
--- gcc_bc_orig/configure	2007-10-22 10:02:37.000000000 -0400
+++ gcc_bc_new/configure	2007-10-26 03:36:47.000000000 -0400
@@ -1609,6 +1609,12 @@
     ;;
 esac
 
+case "${target}" in
+  *-linux-*)
+    noconfigdirs="$noconfigdirs ${target_libraries}"
+    ;;
+esac
+
 # If we aren't building newlib, then don't build libgloss, since libgloss
 # depends upon some newlib header files.
 case "${noconfigdirs}" in
diff -ruN gcc_bc_orig/configure.in gcc_bc_new/configure.in
--- gcc_bc_orig/configure.in	2007-10-22 10:02:38.000000000 -0400
+++ gcc_bc_new/configure.in	2007-10-26 03:37:07.000000000 -0400
@@ -817,6 +817,12 @@
     ;;
 esac
 
+case "${target}" in
+  *-linux-*)
+    noconfigdirs="$noconfigdirs ${target_libraries}"
+    ;;
+esac
+
 # If we aren't building newlib, then don't build libgloss, since libgloss
 # depends upon some newlib header files.
 case "${noconfigdirs}" in
diff -ruN gcc_bc_orig/gcc/config/microblaze/linux.h gcc_bc_new/gcc/config/microblaze/linux.h
--- gcc_bc_orig/gcc/config/microblaze/linux.h	2007-10-24 07:26:24.000000000 -0400
+++ gcc_bc_new/gcc/config/microblaze/linux.h	2007-10-24 07:20:21.000000000 -0400
@@ -1,3 +1,37 @@
+ 
+/* Add the __bluecat__ and BSP-specific macros to the built-in 
+   preprocessor macros. */
+#define BLUECAT_TARGET_OS_CPP_BUILTINS()        \
+    do {                                        \
+	char *bsp = getenv("BLUECAT_TARGET_BSP");   \
+	if (bsp && *bsp) {                          \
+		char *p = xmalloc(strlen(bsp) + 5);     \
+		sprintf(p, "__%s__", bsp);              \
+		builtin_define ((const char *)p);       \
+	}                                           \
+	builtin_define ("__bluecat__");             \
+    } while (0)
+
+#if defined __CYGWIN__
+#define BLUECAT_ADD_EXE_ON_CYGWIN()                               \
+  do {                                                            \
+    int len = strlen(argv[0]);                                    \
+    if (len <= 4 || strncmp(argv[0] + len - 4, ".exe", 4) != 0) { \
+      /* Add .exe otherwise make_relative_prefix                  \
+         cannot resolve symbolic link */                          \
+      char *newargv = xmalloc(len + 5);                           \
+      strcpy(newargv, argv[0]);                                   \
+      strcat(newargv, ".exe");                                    \
+      argv[0] = newargv;                                          \
+    }                                                             \
+  } while (0)
+
+#define GCC_DRIVER_HOST_INITIALIZATION   \
+  {                                      \
+    BLUECAT_ADD_EXE_ON_CYGWIN();         \
+  }
+#endif
+
 
 #define SYSROOT_SUFFIX_SPEC "/.."
 #define SYSROOT_HEADERS_SUFFIX_SPEC "/.."
@@ -28,6 +62,7 @@
   do                                      \
     {                                     \
       LINUX_TARGET_OS_CPP_BUILTINS();     \
+      BLUECAT_TARGET_OS_CPP_BUILTINS();   \
       if (flag_pic)                       \
         {                                 \
           builtin_define ("__PIC__");     \
